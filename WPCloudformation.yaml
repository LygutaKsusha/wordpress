Description: 
  WordPress site

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  VpcId:
    Description: VPC ID to build the stack in
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Must be the VPC Id of an existing VPC in this account

  Subnets:
    Description: The list of subnet IDs in above VPC
    Type: "List<AWS::EC2::Subnet::Id>"
    ConstraintDescription: must be a list of at least two existing subnets associated with at least two different availability zones

  WPSiteTitle:
    Description: The title of the WordPress website
    Type: String
    MinLength: '1'
    MaxLength: '50'
    ConstraintDescription: Must be between 1 and 50 charaacters

  WPAdminUser:
    Description: The adimin username for the WordPress site
    Type: String
    MinLength: '4'
    MaxLength: '20'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only between 4 and 20 alphanumeric characters

  WPAdminEmail:
    Description: Email address of the WordPress Admin user account
    Type: String
    MinLength: '4'
    MaxLength: '50'
    ConstraintDescription: Must be between 4 and 50 characters

  WPAdminPass:
    NoEcho: 'true'
    Description: The WordPress admin account password
    Type: String
    MinLength: '4'
    MaxLength: '20'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be between 4 and 20 characters


  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.

  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain between 1 and 64 alphanumeric characters.

  DBUser:
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain between 1 and 16 alphanumeric characters.

  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '40'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain between 8 and 40 alphanumeric characters.

  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (GB)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: Must be between 5 and 1024 GB.

  DBClass:
    Description: Database instance class
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
    ConstraintDescription: Limited to db.t2.micro and db.t2.small types.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
    ConstraintDescription: Limited to t2.micro and t2.small types.

  MaxSizeASG:
    Description: "Enter the Max Size for the ASG"
    Type: String

  MinSizeASG:
    Description: "Enter the Min Size for the ASG"
    Type: String

  DesiredCapacityASG:
    Description: "Enter the desired capacity for the ASG"
    Type: String

  
Mappings:
  AWSInstanceType2Arch:
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
  
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0de53d8956e8dcf80
      HVMG2: ami-0aeb704d503081ea6

Resources:

  ElbSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Security group for the ELB
          VpcId: !Ref VpcId
          SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0

      
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation

  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open database for access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref WebServerSecurityGroup


  PrivateDBSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
          DBSubnetGroupDescription: DB subnet group for the DB instance
          DBSubnetGroupName: !Join
              - '-'
              - - !Ref AWS::StackName
                - DBSubnetGroup
          SubnetIds: !Ref Subnets

          
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: !Ref DBName
      Engine: MariaDB
      MultiAZ: false
      MasterUsername: !Ref DBUser
      DBInstanceClass: !Ref DBClass
      AllocatedStorage: !Ref DBAllocatedStorage
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref PrivateDBSubnetGroup
      VPCSecurityGroups: 
        - !Ref DBSecurityGroup

  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          wordpress_install:
            - install_cfn
            - install_wordpress
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - |
                    path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource LaunchConfig '
                  - '         --configsets wordpress_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf

        install_wordpress:
          commands:
            01_run_ansible_playbook:
              command: !Join 
                - ''
                - - >-
                    ansible-pull -U https://github.com/LygutaKsusha/wordpress.git
                    local.yaml -e
                  - ' ''wordpress_db_host='
                  - !GetAtt
                    - DBInstance
                    - Endpoint.Address
                  - ' wordpress_db_name='
                  - !Ref DBName
                  - ' wordpress_db_user='
                  - !Ref DBUser
                  - ' wordpress_db_pass='
                  - !Ref DBPassword
                  - ' wordpress_site_title='
                  - !Ref WPSiteTitle
                  - ' wordpress_admin_user='
                  - !Ref WPAdminUser
                  - ' wordpress_admin_pass='
                  - !Ref WPAdminPass
                  - ' wordpress_admin_email='
                  - !Ref WPAdminEmail
                  - ''''
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      AssociatePublicIpAddress: true
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
                yum update -y aws-cfn-bootstrap
            - |
              amazon-linux-extras enable ansible2
            - |
              yum install -y  ansible git
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource LaunchConfig '
            - '         --configsets wordpress_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource LaunchConfig '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

  AppElb:
      Type: AWS::ElasticLoadBalancing::LoadBalancer
      Properties:
          SecurityGroups:
              - !Ref ElbSecurityGroup
          Subnets: !Ref Subnets
          Listeners:
              - LoadBalancerPort: 80
                Protocol: HTTP
                InstancePort: 80
           

  AppAsg:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
          VPCZoneIdentifier: !Ref Subnets
          LaunchConfigurationName: !Ref LaunchConfig
          MinSize: !Ref MinSizeASG
          DesiredCapacity: !Ref DesiredCapacityASG
          MaxSize: !Ref MaxSizeASG
          LoadBalancerNames:
              - !Ref AppElb
          HealthCheckType: ELB
          HealthCheckGracePeriod: 900
      UpdatePolicy:
          AutoScalingReplacingUpdate:
              WillReplace: true

Outputs:
    URL:
        Description: URL to the application
        Value: !GetAtt AppElb.DNSName

        
